{"version":3,"sources":["style.css"],"names":[],"mappings":"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","file":"style.css","sourcesContent":["@charset \"UTF-8\";\n/**\n * The scale.\n */\n.h-center-pos {\n  align-items: center;\n  display: flex;\n  justify-content: center; }\n\n.h-color-blue {\n  color: #4a90e2; }\n\n.is-hidden {\n  display: none; }\n\n/* ============================================================================\n   SETTINGS\n   ========================================================================= */\n/**\n * All of Shell's settings (Sass variables).\n *\n * The settings are broken into two categories:\n *\n * - \"Global\".....settings for the entire library.\n * - \"Local\"......settings for a particular partial.\n *\n * ----------------------------------------------------------------------------\n *\n * All settings start with a global namespace: `$shell` followed by one\n * hyphen, like this:\n *\n   $shell-\n *\n * \"Global\" settings include a letter \"g\" to easily identify them, like so:\n *\n   $shell-g-\n *\n * \"Local\" settings include the name of its section to easily identify them, so\n * settings for the \"Base\" and \"Grid\" sections would be formatted like this:\n *\n   $shell-base-\n   $shell-grid-\n *\n * The `$shell` namespace prevents your project settings and Shell's settings\n * from clashing with each other, and allows you to easily see what is\n * coming from Shell and what isn't.\n *\n * ----------------------------------------------------------------------------\n *\n * CONTENTS:\n *\n * 1.  Base number (Global)\n * 2.  Colours (Global)\n * 3.  Typography (Global)\n * 4.  Spacing (Global)\n * 5.  Cosmetics (Global)\n * 6.  Breakpoints (Global)\n * 7.  Z-Index system (Global)\n * 8.  HiDPI units (Global)\n * 9.  HTML textual `<input>`s (Global)\n * 10. Normalise and Reset (Local)\n * 11. Base (Local)\n * 12. Container (Local)\n * 13. Grid (Local)\n * 14. Helpers (Local)\n */\n/* 1. Base number (Global)\n   ========================================================================= */\n/**\n * The baseline number from which everything else is derived.\n */\n/* 2. Colours (Global)\n   ========================================================================= */\n/**\n * Black and white.\n */\n/**\n * Base text.\n */\n/**\n * Links.\n */\n/* 3. Typography (Global)\n   ========================================================================= */\n/**\n * The scale based on `$shell-g-base-number` being 16:\n *\n * Decrease: 14, 13, 12\n * Increase: 18, 24, 28, 32, 40, 48, 56, 72\n */\n/**\n * Line height.\n */\n/**\n * Families.\n */\n/**\n * Weights.\n */\n/* 4. Spacing (Global)\n   ========================================================================= */\n/**\n * The scale based on `$shell-g-base-number` being 16:\n *\n * Decrease: 12, 8, 4\n * Increase: 24, 32, 40, 48, 56, 72, 96\n */\n/* 5. Cosmetics (Global)\n   ========================================================================= */\n/* 6. Breakpoints (Global)\n   ========================================================================= */\n/**\n * The breakdown of the breakpoints is based off this chart:\n * http://static.lukew.com/unified_device_design.png\n *\n * Here's the thinking:\n *\n * - Palm..........smart-phones and feature phones—anything that can fit into\n *                 the palm of a hand.\n * - Lap...........typically tablets, notebooks and laptops—anything that is\n *                 portable that doesn't include phones.\n * - Lap small.....smaller tablets/notebooks and e-readers e.g. Kindle.\n * - Lap large.....larger tablets and laptops.\n * - Desk..........desktop computers, TVs, etc.—anything that isn't portable.\n * - Desk large....larger desktop computer monitors, TVs, and who knows what\n *                 else?\n *\n * The breakpoints:\n *\n * - Palm: 0–640px\n * - Lap: 641px +\n * - Lap small: 768px +\n * - Lap large: 901px +\n * - Desk: 1200px +\n * - Desk large: 1366px +\n *\n * @credit\n * http://www.lukew.com/ff/entry.asp?1679\n */\n/**\n * All the breakpoints divided by the default user-agent font-size setting\n * that is non-overridable by Shell's base font size setting:\n * `$shell-g-font-size`. We do this division as all viewport width and height\n * media queries are to be applied with the `em` unit. See:\n * http://blog.cloudfour.com/the-ems-have-it-proportional-media-queries-ftw/.\n *\n * N.B. if you wish to override any of the breakpoints then don't forget to\n * apply this calculation:\n *\n    ([breakpoint-value] / 16) * 1em\n *\n * N.B. as we're using a Sass map we need to use a Sass function to make it\n * easier to apply the map keys, the function lives in\n * \"Mixins/Functions -> Retrieve from maps\".\n */\n/**\n * The setting used for the default breakpoint applied to the\n * \"Mixins/Functions -> Apply at breakpoints\" mixin.\n */\n/* 7. Z-Index system (Global)\n   ========================================================================= */\n/**\n * A nice system that uses Sass maps to keep your project `z-index`s\n * maintainable, sane, and free of those crazy `z-index: 99999;` occurrences!\n *\n * Be sure to read this to fully understand how the system works:\n * http://www.sitepoint.com/better-solution-managing-z-index-sass/\n *\n * Shell kicks it off by providing a standard stacking order that most projects\n * would require, you can then update the Sass map in your project \"Settings\"\n * partial, be sure to use nested maps to make this system aware of stacking\n * contexts as having a flat map will soon become a headache to maintain.\n *\n * Applying `z-index`s with this system is done like this:\n *\n    .c-header {\n        z-index: z(header);\n    }\n *\n * And for nested stacking contexts (defined via a nested map):\n *\n    .c-dialog__close-button {\n        z-index: z(dialog-elements, close-button);\n    }\n *\n * N.B. as we're using a Sass map (and nested maps) we need to use a Sass\n * function to make it easier to apply the map keys and to be able to\n * retrieve nested map keys. The function lives in\n * \"Mixins/Functions -> Retrieve from maps\".\n *\n * @credit\n * http://www.sitepoint.com/better-solution-managing-z-index-sass/\n */\n/**\n * Starting from highest to lowest:\n *\n    <body>\n        <dialog>\n            <dialog-close-button>\n        <dialog-underlay>\n        <header>\n        <main>\n        <footer>\n    </body>\n */\n/* 8. HiDPI (Global)\n   ========================================================================= */\n/**\n * The two HiDPI units required for full support, see:\n * http://caniuse.com/#feat=css-media-resolution. Eventually the `dppx` unit\n * will only be required.\n *\n * N.B. Autoprefixer will take care of generating the non-standard\n * `-webkit-min-device-pixel-ratio` for browsers/devices that need it.\n */\n/**\n * Easily target HiDPI resolutions with this media query.\n */\n/* stylelint-disable-next-line string-no-newline */\n/* 9. HTML textual `<input>`s (Global)\n   ========================================================================= */\n/* stylelint-disable string-no-newline */\n/* stylelint-enable */\n/* 10. Normalise and Reset (Local)\n   ========================================================================= */\n/**\n * Booleans.\n */\n/* stylelint-disable-next-line max-line-length */\n/* stylelint-disable-next-line max-line-length */\n/**\n * `:focus` outline styles.\n */\n/* 11. Base (Local)\n   ========================================================================= */\n/**\n * Booleans.\n */\n/**\n * Root element.\n */\n/**\n * Links.\n */\n/* 12. Container (Local)\n   ========================================================================= */\n/**\n * Booleans.\n */\n/**\n * Widths.\n */\n/**\n * Gutter size.\n */\n/* 13. Grid (Local)\n   ========================================================================= */\n/**\n * Grid column widths.\n */\n/**\n * For all grid item widths turn on the ability to apply breakpoints via\n * boolean settings then define the breakpoints, see: \"Mixins/Functions ->\n * Apply at breakpoints\" to understand how this works.\n */\n/* stylelint-disable-next-line max-line-length */\n/* stylelint-disable-next-line max-line-length */\n/* stylelint-disable-next-line max-line-length */\n/* stylelint-disable-next-line max-line-length */\n/* stylelint-disable-next-line max-line-length */\n/* stylelint-disable-next-line max-line-length */\n/* stylelint-disable-next-line max-line-length */\n/* stylelint-disable-next-line max-line-length */\n/* stylelint-disable-next-line max-line-length */\n/* stylelint-disable-next-line max-line-length */\n/* stylelint-disable-next-line max-line-length */\n/* stylelint-disable-next-line max-line-length */\n/* 14. Helpers (Local)\n   ========================================================================= */\n/**\n * For certain \"Helpers\" turn on the ability to apply breakpoints via boolean\n * settings then define the breakpoints, see: \"Mixins/Functions ->\n * Apply at breakpoints\" to understand how this works.\n */\n/**\n * Text sizes.\n */\n/**\n * Base.\n */\n/* stylelint-disable-next-line max-line-length */\n/**\n * Decrease from base.\n */\n/* stylelint-disable-next-line max-line-length */\n/* stylelint-disable-next-line max-line-length */\n/* stylelint-disable-next-line max-line-length */\n/**\n * Increase from base.\n */\n/* stylelint-disable-next-line max-line-length */\n/* stylelint-disable-next-line max-line-length */\n/* stylelint-disable-next-line max-line-length */\n/* stylelint-disable-next-line max-line-length */\n/* stylelint-disable-next-line max-line-length */\n/* stylelint-disable-next-line max-line-length */\n/* stylelint-disable-next-line max-line-length */\n/* stylelint-disable-next-line max-line-length */\n/**\n * Alignments.\n */\n/* stylelint-disable-next-line max-line-length */\n/* stylelint-disable-next-line max-line-length */\n/* stylelint-disable-next-line max-line-length */\n/**\n * Text truncate.\n */\n/* stylelint-disable-next-line max-line-length */\n/**\n * Word wrap and hyphenate.\n */\n/* stylelint-disable-next-line max-line-length */\n/**\n * Hide.\n */\n/* stylelint-disable-next-line max-line-length */\n/**\n * Spacing.\n */\n/**\n * Decrease from base.\n */\n/* stylelint-disable-next-line max-line-length */\n/* stylelint-disable-next-line max-line-length */\n/* stylelint-disable-next-line max-line-length */\n/**\n * Increase from base.\n */\n/* stylelint-disable-next-line max-line-length */\n/* stylelint-disable-next-line max-line-length */\n/* stylelint-disable-next-line max-line-length */\n/* stylelint-disable-next-line max-line-length */\n/* stylelint-disable-next-line max-line-length */\n/* stylelint-disable-next-line max-line-length */\n/* stylelint-disable-next-line max-line-length */\n/* ============================================================================\n   MIXINS AND FUNCTIONS\n   ========================================================================= */\n/**\n * All of Shell's mixins and functions.\n *\n * N.B. all mixins and functions to be written in SassDoc documentation system,\n * see: http://sassdoc.com/.\n *\n * ----------------------------------------------------------------------------\n *\n * CONTENTS:\n *\n * 1. Private mixins and functions\n * 2. HiDPI background image (Mixin)\n * 3. Convert pixels to `rem`s or `em`s (Function)\n * 4. Apply at breakpoints (Mixin)\n * 5. Retrieve from maps (Function)\n * 6. Helpers (Mixin)\n * 7. Shared styles (Mixin)\n */\n/* 1. Private mixins and functions\n   ========================================================================= */\n/**\n * Shell-only mixins and functions, not for Shell consumers although some can\n * be used if the need arises.\n */\n/* 2. HiDPI background image (Mixin)\n   ========================================================================= */\n/* 3. Convert pixels to `rem`s or `em`s (Function)\n   ========================================================================= */\n/* 4. Apply at breakpoints\n   ========================================================================= */\n/**\n * This mixin makes it really easy for a Shell consumer to apply certain parts\n * of Shell at any width based breakpoint(s).\n *\n * N.B. the mixin does not support height based breakpoints or breakpoint\n * ranges.\n *\n * The mixin can also be used outside of Shell in project styles but its main\n * purpose is to allow Shell consumers to easily apply certain parts of Shell\n * at any breakpoint(s), mainly the \"Grid\".\n *\n * The mixin will accept any of the named breakpoints set in \"Settings ->\n * Breakpoints\" (which can be renamed and breakpoints redefined in your\n * project) or any number (the pixel amount of the viewport). The breakpoints\n * get converted to the `em` unit which is best practice in Responsive Web\n * Design. You can also specify if you want a minimum or maximum width media\n * query by passing in the \"min\" or \"max\" labels after you define your\n * breakpoint, the default is minimum width media queries to favour the\n * \"Mobile-first\" approach.\n *\n * Using this mixin requires you to \"opt in\" as Shell doesn't want to assume\n * all of its consumers are building responsive UI's requiring the CSS this\n * mixin generates. Opting in requires changing the relevant Boolean settings\n * found in: \"Settings\". For example if you wanted the \"Hide Visually\" Helper\n * to use this mixin you change its Boolean setting:\n * `$shell-helper-hide-visually-apply-at-breakpoints` to `true` then define\n * the breakpoints you need via its other setting:\n * `$shell-helper-hide-visually-define-breakpoints`. So in the \"Shell\n * Overrides\" section of your project \"Settings\" you will have something like\n * this, depending on what breakpoints you choose:\n *\n   $shell-helper-hide-visually-apply-at-breakpoints: true;\n   $shell-helper-hide-visually-define-breakpoints: (400 max, lap, desk);\n *\n * You define your breakpoints in a comma separated list enclosed in curly\n * brackets with the \"min\" or \"max\" labels always coming *after* the\n * breakpoint. If you want ALL of the named breakpoints defined here:\n * \"Settings -> Breakpoints\" then you can simply pass in the word \"all\", like\n * so:\n *\n   $shell-helper-hide-visually-define-breakpoints: (all);\n *\n * Right now the mixin only allows \"all\" by itself i.e. you cannot add numbers\n * (non-named breakpoints), so doing this will not work:\n *\n   $shell-helper-hide-visually-define-breakpoints: (all, 900);\n *\n * Shell has a global breakpoint setting set in \"Settings -> Breakpoints\" so\n * that you can easily share breakpoints across everything that uses the\n * mixin. By default Shell doesn't apply any breakpoints to this setting, this\n * is for the Shell consumer to apply if they need the ability for shared\n * global breakpoints. So in the \"Shell Overrides\" section of your project\n * \"Settings\" you could do this:\n *\n   $shell-g-global-breakpoints: (lap, desk);\n */\n/* 5. Retrieve from maps\n   ========================================================================= */\n/**\n * An easier way to apply keys from the Shell maps defined in \"Settings\"\n * instead of using the native `map-get` function which can get tedious to\n * type again and again.\n *\n * For example, if you wanted to apply a key from the \"Z-Index system\" map\n * using the native `map-get` function you would have to do it like this:\n *\n    z-index: map-get($shell-g-z-layers, header);\n *\n * And when applying nested map keys, this:\n *\n    z-index: map-get(map-get($shell-g-z-layers, modal-elements), close-button);\n *\n * Instead we can apply it in a much nicer way:\n *\n    z-index: z(header);\n *\n * And for a nested map key:\n *\n    z-index: z(modal-elements, close-button);\n */\n/* 6. Helpers\n   ========================================================================= */\n/**\n * Here are all the Helper mixins, see the Helpers intro comment block for\n * more information.\n */\n/* 7. Shared styles\n   ========================================================================= */\n/**\n * Certain styles need to be shared to keep things DRY.\n */\n/* ============================================================================\n   NORMALISE AND RESET\n   ========================================================================= */\n/**\n * Let's get all browsers rendering all elements more consistently and in line\n * with modern standards, and let's nuke certain user-agent styles so that\n * everything is on an even playing field.\n *\n * We can also be a bit opinionated about CM specific style treatments, marked\n * with \"N.B. Shell specific\".\n *\n * N.B. we should be keeping an eye on the normalize.css repo especially the\n * Issues: https://github.com/necolas/normalize.css/issues/.\n *\n * @credit\n * https://necolas.github.io/normalize.css/\n *\n * ----------------------------------------------------------------------------\n *\n * CONTENTS:\n *\n * 1. Root element and global resets\n * 2. Block-level elements\n * 3. Inline elements\n * 4. Embedded elements\n * 5. Form elements\n * 6. Interactions\n */\n/* 1. Root element and global resets\n   ========================================================================= */\n/**\n * 1. Reset the `box-sizing` property to the more friendly `border-box` value,\n *    N.B. Shell specific.\n * 2. Prevent adjustments of font size after orientation changes in IE on\n *    Windows Phone and in iOS.\n */\nhtml {\n  box-sizing: border-box;\n  /* stylelint-disable property-no-vendor-prefix */\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n  /* stylelint-enable */ }\n\n/* stylelint-disable selector-no-universal */\n*,\n*::before,\n*::after {\n  box-sizing: inherit; }\n\n/* stylelint-enable */\n/**\n * Remove all margins, paddings, and borders.\n *\n * N.B. do not include the following elements:\n * - `<input>`\n * - `<button>`\n * - `<textarea>`\n *\n * The complete list of HTML5 elements:\n * https://developer.mozilla.org/en/docs/Web/Guide/HTML/HTML5/\n * HTML5_element_list\n *\n * N.B. Shell specific.\n */\na,\nabbr,\naddress,\narticle,\naside,\nb,\nblockquote,\nbody,\ncaption,\ncite,\ncode,\ndd,\ndel,\ndetails,\ndfn,\ndialog,\ndiv,\ndl,\ndt,\nem,\nfieldset,\nfigcaption,\nfigure,\nfooter,\nform,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nheader,\nhtml,\ni,\niframe,\nimg,\nins,\nkbd,\nlabel,\nlegend,\nli,\nmain,\nmenu,\nnav,\nobject,\nol,\np,\npre,\nq,\ns,\nsamp,\nsection,\nsmall,\nspan,\nstrong,\nsub,\nsummary,\nsup,\ntable,\ntbody,\ntd,\ntfoot,\nth,\nthead,\ntime,\ntr,\nu,\nul,\nvar {\n  border: 0;\n  margin: 0;\n  padding: 0; }\n\n/* 2. Block-level elements\n   ========================================================================= */\n/**\n * Add the correct display in IE 9-.\n *\n * 1. Add the correct display in Edge, IE, and Firefox.\n * 2. Add the correct display in IE.\n */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nnav,\nmain,\nmenu,\nsection {\n  display: block; }\n\n/*\n * Add the correct display in all browsers.\n */\nsummary {\n  display: list-item; }\n\n/**\n * 1. Add the correct display in IE.\n * 2. Add the correct display in IE 10-.\n */\ntemplate,\n[hidden] {\n  display: none; }\n\n/**\n * Reset lists, this is in addition to removing `margin` and `padding` in\n * \"Root element and global resets\".\n *\n * N.B. Shell specific.\n */\nul,\nol {\n  list-style-type: none; }\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\nhr {\n  box-sizing: content-box;\n  height: 0;\n  overflow: visible; }\n\n/* 3. Inline elements\n   ========================================================================= */\n/**\n * Add the correct display in IE 9-.\n */\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block; }\n\n/**\n * 1. Remove the gray background on active links in IE 10.\n * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.\n */\na {\n  background-color: transparent;\n  /* stylelint-disable-next-line property-no-vendor-prefix */\n  -webkit-text-decoration-skip: objects; }\n\n/**\n * Remove the outline on focused links when they are also active or hovered\n * in all browsers.\n */\na:active,\na:hover {\n  outline-width: 0; }\n\n/**\n * 1. Remove the bottom border in Firefox 39-.\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\nabbr[title] {\n  border-bottom: none;\n  text-decoration: underline;\n  /* stylelint-disable-next-line declaration-block-no-duplicate-properties */\n  text-decoration: underline dotted; }\n\n/**\n * Prevent the duplicate application of `bolder` by the next rule in Safari 6.\n */\nb,\nstrong {\n  font-weight: inherit; }\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n/* stylelint-disable-next-line no-duplicate-selectors */\nb,\nstrong {\n  font-weight: bolder; }\n\n/**\n * Add the correct font style in Android 4.3-.\n */\ndfn {\n  font-style: italic; }\n\n/**\n * Address inconsistent and variable font size in all browsers.\n */\nsmall {\n  /* stylelint-disable-next-line declaration-property-unit-whitelist */\n  font-size: 100%; }\n\n/**\n * Prevent `<sub>` and `<sup>` affecting line height in all browsers.\n */\nsub,\nsup {\n  /* stylelint-disable-next-line declaration-property-unit-whitelist */\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline; }\n\nsub {\n  bottom: -0.25em; }\n\nsup {\n  top: -0.5em; }\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace, monospace;\n  font-size: 1em; }\n\n/* 4. Embedded elements\n   ========================================================================= */\n/**\n * Add the correct display in iOS 4-7.\n */\naudio:not([controls]) {\n  display: none;\n  height: 0; }\n\n/**\n * Hide the overflow in IE.\n */\nsvg:not(:root) {\n  overflow: hidden; }\n\n/* 5. Form elements\n   ========================================================================= */\n/**\n * 1. Change font properties to `inherit` in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font: inherit;\n  margin: 0; }\n\n/**\n * Show the overflow in IE.\n *\n * 1. Show the overflow in Edge.\n */\nbutton,\ninput {\n  overflow: visible; }\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n *\n * 1. Remove the inheritance of text transform in Firefox.\n */\nbutton,\nselect {\n  text-transform: none; }\n\n/**\n * Reset all styles so we have a blank canvas.\n *\n * N.B. Shell specific.\n */\nbutton {\n  background: transparent;\n  border: 0;\n  padding: 0; }\n\n/**\n * 1. Prevent a WebKit bug where (2) destroys native `<audio>` and `<video>`\n *    controls in Android 4.\n * 2. Improve usability and consistency of cursor style between image-type\n *    `<input>` and others (N.B. Shell specific).\n * 3. Correct the inability to style clickable types in iOS and Safari.\n */\nbutton,\nhtml [type='button'],\n[type='reset'],\n[type='submit'] {\n  /* stylelint-disable-next-line property-no-vendor-prefix */\n  -webkit-appearance: button;\n  cursor: pointer; }\n\n/**\n * Remove the inner border and padding in Firefox.\n */\nbutton::-moz-focus-inner,\n[type='button']::-moz-focus-inner,\n[type='reset']::-moz-focus-inner,\n[type='submit']::-moz-focus-inner {\n  border-style: none;\n  padding: 0; }\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\nbutton:-moz-focusring,\n[type='button']:-moz-focusring,\n[type='reset']:-moz-focusring,\n[type='submit']:-moz-focusring {\n  outline: 1px dotted ButtonText; }\n\n/**\n * Indicate that `<label>` will shift focus to the associated `<input>`\n * element.\n *\n * N.B. Shell specific.\n */\nlabel {\n  cursor: pointer; }\n\n/**\n * 1. Remove the default vertical scrollbar in IE.\n * 2. Disable `<textarea>`s from being resized horizontally\n *    (N.B. Shell specific).\n */\ntextarea {\n  overflow: auto;\n  resize: vertical; }\n\n/**\n * Chrome and Firefox set a `min-width: min-content;` on `<fieldset>`s, so we\n * reset that to ensure it behaves more like a standard block element, see:\n * http://stackoverflow.com/questions/17408815/\n * fieldset-resizes-wrong-appears-to-have-unremovable-min-width-min-content.\n *\n * N.B. Shell specific.\n */\nfieldset {\n  min-width: 0; }\n\n@-moz-document url-prefix() {\n  fieldset {\n    display: table-cell; } }\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the colour inheritance from `<fieldset>` elements in IE.\n */\nlegend {\n  color: inherit;\n  display: table;\n  max-width: 100%;\n  white-space: normal; }\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\nprogress {\n  vertical-align: baseline; }\n\n/**\n * Apply the `not-allowed` cursor for disabled elements (`<button>`, `<input>`,\n * `<textarea>`, `<optgroup>`, `<option>` and `<fieldset>`) and disable pointer\n * events.\n *\n * N.B. Shell specific.\n */\n:disabled {\n  cursor: not-allowed;\n  pointer-events: none; }\n\n/**\n * 1. Add the correct box sizing in IE 10-.\n * 2. Remove the padding in IE 10-.\n */\n[type='checkbox'],\n[type='radio'] {\n  box-sizing: border-box;\n  padding: 0; }\n\n/**\n * Remove the increment and decrement buttons in Webkit and Firefox.\n *\n * N.B. Shell specific.\n */\n[type='number'] {\n  /* stylelint-disable-next-line property-no-vendor-prefix */\n  -moz-appearance: textfield; }\n\n[type='number']::-webkit-inner-spin-button,\n[type='number']::-webkit-outer-spin-button {\n  /* stylelint-disable-next-line property-no-vendor-prefix */\n  -webkit-appearance: none;\n  margin: 0; }\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n[type='search'] {\n  /* stylelint-disable-next-line property-no-vendor-prefix */\n  -webkit-appearance: textfield;\n  outline-offset: -2px; }\n\n/**\n * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.\n */\n[type='search']::-webkit-search-cancel-button,\n[type='search']::-webkit-search-decoration {\n  /* stylelint-disable-next-line property-no-vendor-prefix */\n  -webkit-appearance: none; }\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n/* stylelint-disable-next-line no-descending-specificity */\n::-webkit-file-upload-button {\n  /* stylelint-disable-next-line property-no-vendor-prefix */\n  -webkit-appearance: button;\n  font: inherit; }\n\n/**\n * Remove the clear field button (an \"X\" icon) and the reveal password button\n * (an \"eye\" icon) that is generated by IE 10+ for textual inputs. See:\n * http://stackoverflow.com/a/21869433/1116204.\n *\n * N.B. Shell specific.\n */\n/* stylelint-disable no-descending-specificity */\n::-ms-clear,\n::-ms-reveal {\n  display: none; }\n\n/* stylelint-enable */\n/**\n * Unstyle the caret on `<select>`s in IE 10+.\n *\n * N.B. Shell specific.\n */\n/* stylelint-disable-next-line no-descending-specificity */\n::-ms-expand {\n  background-color: transparent;\n  border: 0; }\n\n/**\n * Rules for iOS devices.\n *\n * We isolate these rules behind an `.target-ios` class that is appended to the\n * `<html>` element via user-agent sniffing, for example:\n *\n    <html class=\"target-ios\">\n *\n * N.B. this functionality is not part of the Shell library, you will need to\n * add it yourself to the project Shell applies too.\n *\n * N.B. Shell specific.\n */\n.target-ios {\n  /**\n     * Fixes \"clickability\" issue (and more generally, the firing of events\n     * such as focus as well) for traditionally non-focusable elements with\n     * `[role=\"button\"]`, see:\n     * https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile\n     */\n  /**\n     * Remove the top inner shadow from iOS inputs. See:\n     * https://davidwalsh.name/input-shadows-ipad\n     */\n  /**\n     * Remove rounded corners that iOS applies to all `<input>` buttons.\n     */ }\n  .target-ios [role='button'] {\n    cursor: pointer; }\n  .target-ios input[type='text'],\n  .target-ios input[type='search'],\n  .target-ios input[type='tel'],\n  .target-ios input[type='url'],\n  .target-ios input[type='email'],\n  .target-ios input[type='password'],\n  .target-ios input[type='month'],\n  .target-ios input[type='week'],\n  .target-ios input[type='time'],\n  .target-ios input[type='date'],\n  .target-ios input[type='datetime'],\n  .target-ios input[type='datetime-local'],\n  .target-ios input[type='number'],\n  .target-ios textarea {\n    background-clip: padding-box; }\n  .target-ios [type='submit'],\n  .target-ios [type='button'],\n  .target-ios [type='image'],\n  .target-ios [type='reset'] {\n    border-radius: 0; }\n\n/* 6. Interactions\n   ========================================================================= */\n/**\n * Suppress the focus outline on links that cannot be accessed via a keyboard.\n * This prevents an unwanted focus outline from appearing around elements that\n * might still respond to pointer events.\n *\n * N.B. it is okay to use `!important` here as we're doing it pre-emptively\n * i.e. you know you will always want the rule it's applied too to take\n * precedence.\n *\n * N.B. Shell specific.\n */\n[tabindex='-1']:focus {\n  outline: none !important; }\n\n/**\n * Optional custom `:focus` styles for all browsers, however, if you wish to\n * keep the default focus ring that Webkit and Blink browsers apply then assign\n * `$shell-normalise-reset-apply-webkit-and-blink-focusring-if-focus-outline-\n * style-is-applied-for-all-browsers` to `true`.\n */\n/**\n * Don't use outline on Mozilla browsers, if it's not needed.\n */\n:focus:not(:-moz-focusring) {\n  outline: none; }\n\n/**\n * Avoid 300ms click delay on touch devices that support the `touch-action` CSS\n * property.\n *\n * In particular, unlike most other browsers, IE 11+Edge on Windows 10 on touch\n * devices and IE Mobile 10-11 DON'T remove the click delay when\n * `<meta name=\"viewport\" content=\"width=device-width\">` is present.\n * However, they DO support removing the click delay via\n * `touch-action: manipulation`.\n *\n * See:\n * - http://caniuse.com/#feat=css-touch-action\n * - http://patrickhlauke.github.io/touch/tests/results/#suppressing-300ms-delay\n * - https://adactio.com/journal/10019\n * - https://developers.google.com/web/updates/2013/12/300ms-tap-delay-gone-away\n */\n/* stylelint-disable no-descending-specificity */\na,\narea,\nbutton,\ninput,\nlabel,\nselect,\nsummary,\ntextarea,\n[tabindex]:not([tabindex='-1']) {\n  touch-action: manipulation; }\n\n/* stylelint-enable */\n/**\n * Remove `:focus` styles for `coarse` input mechanisms, and on the `:hover`\n * pseudo class.\n */\n@media (pointer: coarse) and (hover: none) {\n  :focus {\n    outline: none; } }\n\n/* ============================================================================\n   GRID\n   ========================================================================= */\n/**\n * A powerful Flexbox-based grid that is responsive ready, nestable, and comes\n * with a bunch of handy modifiers. This makes the grid the workhorse of your\n * UI builds, any layout you need always look to the grid first—including\n * within your \"Components\", it exists so you don't have to write redundant\n * CSS to construct layouts.\n *\n * Every grid column width can be generated at any breakpoint thanks to the\n * mixin found here: \"Mixins and Functions -> Apply at breakpoints\". So if you\n * wanted 2 columns at smaller viewports then go to 4 columns at larger\n * viewports you can easily do this just by passing in the breakpoints you need\n * into the relevant settings, like so:\n *\n   // 2 cols\n   $shell-grid-apply-2-col-width-at-breakpoints: true;\n   $shell-grid-define-2-col-width-breakpoints: (1199 max);\n\n   // 4 cols\n   $shell-grid-apply-4-col-width-at-breakpoints: true;\n   $shell-grid-define-4-col-width-breakpoints: (desk);\n *\n * This will to compile to:\n *\n    @media (max-width: 74.9375em) {\n        .l-grid__item--2-col-up-to-desk {\n            width: 16.6666%;\n        }\n    }\n\n    @media (min-width: 75em) {\n        .l-grid__item--4-col-from-desk {\n            width: 33.3333%%;\n        }\n    }\n *\n * Other styles cannot be applied to a grid item. Grid is a \"Layout Module\"\n * therefore the Single Responsibility Principle and the Open/Close Principle\n * strictly applies. So this would be invalid:\n *\n    <div class=\"l-grid__item  c-card\">\n        […]\n    </div>\n *\n * Here we have wrongly applied a \"Component\" (`c-card`) to the same element as\n * a \"Layout Module\", we've mixed concerns, this can result in this part of\n * the UI being prone to breakages. The valid way to approach this would be:\n *\n    <div class=\"l-grid__item\">\n        <div class=\"c-card\">\n            […]\n        </div>\n    </div>\n *\n * As nicely put by Harry Roberts:\n *\n * \"Grid systems grid should be thought of as shelves. They contain content but\n * are not content in themselves. You put up your shelves then fill them with\n * your stuff. By setting up our grids separately to our components you can\n * move components around a lot more easily than if they had dimensions\n * applied to them; this makes our front-ends a lot more adaptable and quick\n * to work with.\"\n *\n * N.B. they're are a number of Flexbox bugs captured here:\n * https://github.com/philipwalton/flexbugs, these have been accounted for in\n * the Shell grid however if anything is missed please log an issue:\n * https://github.com/campaignmonitor/shell/issues.\n *\n * ----------------------------------------------------------------------------\n *\n * Grid is namespaced with \"l\" followed by one hyphen, like this:\n *\n   l-grid\n *\n * The \"l\" stands for \"layout\" as Grid is a \"Layout Module\".\n *\n * ----------------------------------------------------------------------------\n *\n * @markup\n    <div class=\"l-grid [modifier(s)]\">\n        <div class=\"l-grid__item l-grid__item--2-col\">\n            […]\n        </div>\n        <div class=\"l-grid__item l-grid__item--2-col\">\n            […]\n        </div>\n    </div>\n\n    <div class=\"l-grid [modifier(s)]\">\n        <div class=\"l-grid__item l-grid__item--4-col\">\n            […]\n        </div>\n        <div class=\"l-grid__item l-grid__item--4-col\">\n            […]\n        </div>\n        <div class=\"l-grid__item l-grid__item--4-col\">\n            […]\n        </div>\n        <div class=\"l-grid__item l-grid__item--4-col\">\n            […]\n        </div>\n    </div>\n *\n * @credit\n * https://github.com/suitcss/components-grid\n */\n/**\n * Grid container.\n *\n * 1. Negative left margin to negate the horizontal gutters.\n */\n.l-grid {\n  display: flex;\n  flex-flow: row wrap;\n  margin-left: -1rem; }\n\n/**\n * Grid items.\n *\n * 1. Allows the use of widths.\n * 2. Horizontal gutter.\n */\n.l-grid__item {\n  flex-basis: auto;\n  padding-left: 1rem; }\n\n/**\n * Modifier: all items match height of tallest item in a row.\n */\n.l-grid--equal-height > .l-grid__item {\n  display: flex; }\n\n/**\n * Modifier: fit, all grid items have an equal width.\n *\n * 1. Provide all values to avoid IE 10 bug with the shorthand `flex`\n *    property, see: http://git.io/vllC7.\n *    Use `0%` to avoid bug in IE 10/11 with unitless `flex-basis`, see:\n *    http://git.io/vllWx.\n */\n.l-grid--fit .l-grid__item {\n  flex: 1 1 0%; }\n\n/**\n * Modifiers: horizontal gutter sizes.\n */\n.l-grid--gutter-horizontal {\n  margin-left: -1rem; }\n  .l-grid--gutter-horizontal > .l-grid__item {\n    padding-left: 1rem; }\n\n.l-grid--gutter-horizontal-small {\n  margin-left: -0.75rem; }\n  .l-grid--gutter-horizontal-small > .l-grid__item {\n    padding-left: 0.75rem; }\n\n.l-grid--gutter-horizontal-x-small {\n  margin-left: -0.5rem; }\n  .l-grid--gutter-horizontal-x-small > .l-grid__item {\n    padding-left: 0.5rem; }\n\n.l-grid--gutter-horizontal-2x-small {\n  margin-left: -0.25rem; }\n  .l-grid--gutter-horizontal-2x-small > .l-grid__item {\n    padding-left: 0.25rem; }\n\n.l-grid--gutter-horizontal-large {\n  margin-left: -1.5rem; }\n  .l-grid--gutter-horizontal-large > .l-grid__item {\n    padding-left: 1.5rem; }\n\n.l-grid--gutter-horizontal-x-large {\n  margin-left: -2rem; }\n  .l-grid--gutter-horizontal-x-large > .l-grid__item {\n    padding-left: 2rem; }\n\n.l-grid--gutter-horizontal-2x-large {\n  margin-left: -2.5rem; }\n  .l-grid--gutter-horizontal-2x-large > .l-grid__item {\n    padding-left: 2.5rem; }\n\n.l-grid--gutter-horizontal-3x-large {\n  margin-left: -3rem; }\n  .l-grid--gutter-horizontal-3x-large > .l-grid__item {\n    padding-left: 3rem; }\n\n.l-grid--gutter-horizontal-4x-large {\n  margin-left: -3.5rem; }\n  .l-grid--gutter-horizontal-4x-large > .l-grid__item {\n    padding-left: 3.5rem; }\n\n.l-grid--gutter-horizontal-5x-large {\n  margin-left: -4.5rem; }\n  .l-grid--gutter-horizontal-5x-large > .l-grid__item {\n    padding-left: 4.5rem; }\n\n.l-grid--gutter-horizontal-6x-large {\n  margin-left: -6rem; }\n  .l-grid--gutter-horizontal-6x-large > .l-grid__item {\n    padding-left: 6rem; }\n\n/**\n * Modifiers: vertical gutters.\n */\n.l-grid--gutter-vertical {\n  margin-bottom: -1rem; }\n  .l-grid--gutter-vertical > .l-grid__item {\n    margin-bottom: 1rem; }\n\n.l-grid--gutter-vertical-small {\n  margin-bottom: -0.75rem; }\n  .l-grid--gutter-vertical-small > .l-grid__item {\n    margin-bottom: 0.75rem; }\n\n.l-grid--gutter-vertical-x-small {\n  margin-bottom: -0.5rem; }\n  .l-grid--gutter-vertical-x-small > .l-grid__item {\n    margin-bottom: 0.5rem; }\n\n.l-grid--gutter-vertical-2x-small {\n  margin-bottom: -0.25rem; }\n  .l-grid--gutter-vertical-2x-small > .l-grid__item {\n    margin-bottom: 0.25rem; }\n\n.l-grid--gutter-vertical-large {\n  margin-bottom: -1.5rem; }\n  .l-grid--gutter-vertical-large > .l-grid__item {\n    margin-bottom: 1.5rem; }\n\n.l-grid--gutter-vertical-x-large {\n  margin-bottom: -2rem; }\n  .l-grid--gutter-vertical-x-large > .l-grid__item {\n    margin-bottom: 2rem; }\n\n.l-grid--gutter-vertical-2x-large {\n  margin-bottom: -2.5rem; }\n  .l-grid--gutter-vertical-2x-large > .l-grid__item {\n    margin-bottom: 2.5rem; }\n\n.l-grid--gutter-vertical-3x-large {\n  margin-bottom: -3rem; }\n  .l-grid--gutter-vertical-3x-large > .l-grid__item {\n    margin-bottom: 3rem; }\n\n.l-grid--gutter-vertical-4x-large {\n  margin-bottom: -3.5rem; }\n  .l-grid--gutter-vertical-4x-large > .l-grid__item {\n    margin-bottom: 3.5rem; }\n\n.l-grid--gutter-vertical-5x-large {\n  margin-bottom: -4.5rem; }\n  .l-grid--gutter-vertical-5x-large > .l-grid__item {\n    margin-bottom: 4.5rem; }\n\n.l-grid--gutter-vertical-6x-large {\n  margin-bottom: -6rem; }\n  .l-grid--gutter-vertical-6x-large > .l-grid__item {\n    margin-bottom: 6rem; }\n\n/**\n * Modifier: gutterless for both horizontal gutters, we don't need to apply for\n * vertical gutters as their gutters aren't applied at the base level.\n *\n * N.B. we boost the specificity by chaining the base class to the modifier\n * class to make sure we're always overriding any gutter modifier classes.\n */\n.l-grid.l-grid--gutterless {\n  margin-left: 0; }\n  .l-grid.l-grid--gutterless > .l-grid__item {\n    padding-left: 0; }\n\n/**\n * Modifiers: alignments for all grid items in a grid container and alignments\n * for the direct child of a grid item.\n *\n * Grid container alignments work like this:\n *\n * ➜ Middle\n * [.........................................................................]\n * [....................[Flex item][Flex item][Flex item]....................]\n * [.........................................................................]\n *\n * ➜ Bottom\n * [.........................................................................]\n * [.........................................................................]\n * [....................[Flex item][Flex item][Flex item]....................]\n *\n * ➜ Center\n * [....................[Flex item][Flex item][Flex item]....................]\n *\n * ➜ Right\n * [........................................[Flex item][Flex item][Flex item]]\n *\n * Grid item alignments work as above but within a grid item and are best\n * suited when grid items use set column widths (see: \"Modifiers: grid column\n * widths\").\n */\n.l-grid--align-middle,\n.l-grid__item--align-middle {\n  align-items: center; }\n\n.l-grid--align-bottom,\n.l-grid__item--align-bottom {\n  align-items: flex-end; }\n\n.l-grid--align-center,\n.l-grid__item--align-center {\n  justify-content: center; }\n\n.l-grid--align-right,\n.l-grid__item--align-right {\n  justify-content: flex-end; }\n\n.l-grid__item--align-middle,\n.l-grid__item--align-bottom,\n.l-grid__item--align-center,\n.l-grid__item--align-right {\n  display: flex; }\n\n/**\n * Modifier: alignments for grid items themselves using the \"Auto-margin\"\n * technique. The most common use case is when you want one of the grid items\n * in a grid container to be aligned in the center or to the right of the\n * remaining space in a grid container.\n *\n * See: https://medium.freecodecamp.com/understanding-flexbox-everything-\n * you-need-to-know-b4013d4dc9af#.11oq5pimb#d874\n *\n * ➜ Center\n * [[Flex item @20%][Flex item @20%][Flex item @20%]........[Flex item].......]\n *\n * ➜ Right\n * [[Flex item @20%][Flex item @20%][Flex item @20%]...............[Flex item]]\n */\n.l-grid__item--auto-margin-center {\n  margin-left: auto;\n  margin-right: auto; }\n\n.l-grid__item--auto-margin-right {\n  margin-left: auto; }\n\n/**\n * Modifiers: \"space between\" and \"space around\".\n */\n.l-grid--space-between {\n  justify-content: space-between; }\n\n.l-grid--space-around {\n  justify-content: space-around; }\n\n/**\n * Modifier: no wrap.\n */\n.l-grid--nowrap {\n  flex-wrap: nowrap; }\n\n/**\n * Modifier: make a grid item take up the remaining space of a grid container.\n */\n.l-grid__item--fill {\n  flex-grow: 1; }\n\n/**\n * Modifiers: grid column widths.\n */\n.l-grid__item--1-col {\n  width: calc(100% / 12); }\n\n.l-grid__item--2-col {\n  width: calc((100% / 12) * 2); }\n\n.l-grid__item--3-col {\n  width: 25%; }\n\n.l-grid__item--4-col {\n  width: calc((100% / 12) * 4); }\n\n.l-grid__item--5-col {\n  width: calc((100% / 12) * 5); }\n\n.l-grid__item--6-col {\n  width: 50%; }\n\n.l-grid__item--7-col {\n  width: calc((100% / 12) * 7); }\n\n.l-grid__item--8-col {\n  width: calc((100% / 12) * 8); }\n\n.l-grid__item--9-col {\n  width: 75%; }\n\n.l-grid__item--10-col {\n  width: calc((100% / 12) * 10); }\n\n.l-grid__item--11-col {\n  width: calc((100% / 12) * 11); }\n\n.l-grid__item--12-col {\n  width: 100%; }\n\n/* ============================================================================\n   HELPERS\n   ========================================================================= */\n/**\n * The purpose of Helpers is to provide extremely common style treatments\n * and UI patterns, some good examples are:\n *\n * - Hide an element visually but have it available for screen readers.\n * - Truncate a line of text using an ellipsis.\n * - Applying white space outside of Components.\n *\n * Rather than repeating the CSS for these common style treatments and UI\n * patterns over and over and also the cognitive load of having to remember\n * their CSS declarations we instead abstract them into nicely reusable\n * classes and mixins.\n *\n * Helpers all follow the Single Responsibility Principle and the Open/Closed\n * Principle meaning they do one thing and one thing only and are never open to\n * extension i.e. you cannot modify or add to them in any way. If you need to\n * modify any of Shell's Helpers then you should simply not use them. Read more\n * about these principles and how they apply to CSS here:\n *\n * - http://csswizardry.com/2012/04/\n *   the-single-responsibility-principle-applied-to-css/\n * - http://csswizardry.com/2012/06/the-open-closed-principle-applied-to-css/\n *\n * Implementation\n *\n * Helpers are available as classes and sometimes as mixins, here we explain\n * how to implement the two different types. The class versions come with the\n * `!important` keyword, this is because they always need to win in terms of\n * CSS specificity as they should always just work. For the mixin versions\n * this is optional as the mixin versions are typically being applied from\n * within Components therefore do not require the specificity boost. All the\n * mixin versions are defined in \"Mixins and Functions -> Helpers\".\n *\n * Applying Helpers via their *class* implementation would only be done in two\n * scenarios:\n *\n * - **Outside of Components and Layout Templates:** this'll be rare as most\n *   of your UI should be componentised or encapsulated in a Layout Template,\n *   for example, a site header or footer. An example though, might be that\n *   you have a paragraph element (`<p>`) sitting between two Components in a\n *   view that needs to be center aligned, so you apply one of the \"Text\"\n *   Helper classes: `.h-text-align-center`, like so:\n *   `<p class=\"h-text-align-center\">`. However, this could be argued that\n *   this paragraph element should become a Component. The main exception of\n *   avoiding Helpers outside of Components and Layout Templates is the\n *   \"Spacing\" Helpers as we don't want to bake in outside (`margin`) spacing\n *   to Components as this makes them contextual to surrounding UI.\n *\n * - **Inside of Components and Layout Templates:** although quite rare there\n *   are certain scenarios were you would want to be applying a Helper\n *   directly in the markup of a Component or Layout Template as opposed to\n *   applying it via the mixin implementation. However, this typically only\n *   ever applies to multi-line declaration Helpers, applying a single-line\n *   declaration Helper, for example:\n *\n    .h-text-size {\n        font-size: rem($shell-g-font-size) !important;\n    }\n *\n *   Wouldn't be correct as you would simply write that single-line declaration\n *   directly into your Component or Layout Template CSS, and this is why\n *   single-line declaration Helpers do not come with a mixin version. An\n *   example of applying a multi-line declaration Helper directly in the\n *   markup of a Component or Layout Template would be when you're having to\n *   create a class to apply a fairly common Helper. For example, you're\n *   inside a \"Drop Down Menu\" Component needing to add a piece of text to the\n *   drop down menu trigger button that is only for screen reader users—using\n *   the \"Hide visually\" Helper. The correct way to achieve this would be:\n *\n    <button type=\"button\" class=\"c-drop-down-menu__trigger\">\n        My account\n        <span class=\"h-hide-visually\">Open the menu with the enter key and\n        close it with the escape key; use the up and down arrow keys to\n        navigate.</span>\n    </button>\n *\n *   Not:\n *\n    <button type=\"button\" class=\"c-drop-down-menu__trigger\">\n        My account\n        <span class=\"c-drop-down-menu__trigger-assistive-text\">Open the menu\n        with the enter key and close it with the escape key; use the up and\n        down arrow keys to navigate.</span>\n    </button>\n    .c-drop-down-menu__trigger-assistive-text {\n        @include h-hide-visually;\n    }\n *\n *   Knowing when to do this isn't always clear and it is very case dependant.\n *\n * Applying Helpers via their *mixin* implementation would only be done in one\n * scenario:\n *\n * - **Inside of Components and Layout Templates:** any multi-line declaration\n *   Helpers should be applied via their mixin, this is to keep all the styles\n *   related to a Component or Layout Template nicely contained. For example,\n *   you may need to truncate a line of text in a site header Layout Template\n *   that is part of a main nav link item—using the \"Text truncate\" Helper.\n *   The correct way to achieve this would be:\n *\n    <a href=\"some/url\" class=\"l-header__nav-item\">List &amp; Subscribers</a>\n *\n    .l-header__nav-item {\n        […]\n        @include h-text-truncate;\n    }\n *\n *   Not:\n *\n    <a href=\"some/url\" class=\"l-header__nav-item  h-text-truncate\">List &amp;\n    Subscribers</a>\n *\n * ----------------------------------------------------------------------------\n *\n * N.B. it is important not to overuse certain Helpers, the exceptions are the\n * \"Spacing\" Helpers and the \"Hide visually\" and \"Text truncate\" Helpers.\n * Overuse can indicate that your UI is not componentised enough, which can\n * lead to a number of problems.\n *\n * ----------------------------------------------------------------------------\n *\n * N.B. some Helpers are available to be applied at any breakpoint the Shell\n * consumer wishes, see \"Mixins and Functions -> Apply at breakpoints\" to\n * understand how this works.\n *\n * ----------------------------------------------------------------------------\n *\n * Helpers are namespaced with \"h\" followed by one hyphen, like this:\n *\n   h-clear-fix\n   h-text-truncate\n *\n * The \"h\" stands for \"helper\".\n *\n * ----------------------------------------------------------------------------\n *\n * CONTENTS:\n *\n * 1. Clear fix\n * 2. Text\n * 3. Hide\n * 4. Spacing\n * 5. Alignment\n * 6. Intrinsic ratio\n * 7. Non-responsive image\n */\n/* 1. Clear fix\n   ========================================================================= */\n/**\n * Makes an element expand to contain floated children.\n *\n * N.B. mixin is here: \"Mixins and Functions -> Helpers\".\n */\n.h-clear-fix::after {\n  clear: both !important;\n  content: \" !important\";\n  display: table !important; }\n\n/* 2. Text\n   ========================================================================= */\n/**\n * Sizes.\n */\n/**\n * Base.\n */\n.h-text-size {\n  font-size: 1rem !important; }\n\n/**\n * Decrease from base.\n */\n.h-text-size-small {\n  font-size: 0.875rem !important; }\n\n.h-text-size-x-small {\n  font-size: 0.8125rem !important; }\n\n.h-text-size-2x-small {\n  font-size: 0.75rem !important; }\n\n/**\n * Increase from base.\n */\n.h-text-size-large {\n  font-size: 1.125rem !important; }\n\n.h-text-size-x-large {\n  font-size: 1.5rem !important; }\n\n.h-text-size-2x-large {\n  font-size: 1.75rem !important; }\n\n.h-text-size-3x-large {\n  font-size: 2rem !important; }\n\n.h-text-size-4x-large {\n  font-size: 2.5rem !important; }\n\n.h-text-size-5x-large {\n  font-size: 3rem !important; }\n\n.h-text-size-6x-large {\n  font-size: 3.5rem !important; }\n\n.h-text-size-7x-large {\n  font-size: 4.5rem !important; }\n\n/**\n * Alignments.\n */\n.h-text-align-center {\n  text-align: center !important; }\n\n.h-text-align-left {\n  text-align: left !important; }\n\n.h-text-align-right {\n  text-align: right !important; }\n\n/**\n * Truncate some text using an ellipsis. This Helper will only work on block\n * container elements so the default is set to `display: block;`, to override\n * this to be, say, `display: inline-block;` you have two options:\n *\n * 1. Use the \"Inline\" modifier class selector: `.h-text-truncate--inline`.\n * 2. Use the mixin assigning \"inline-block\" to the `$display` parameter:\n *    `@include h-text-truncate(inline-block);`.\n *\n * You can assign other `display` values when using the mixin but not sure if\n * that'll ever be required outside of `display: block;` and\n * `display: inline-block;`?\n *\n * N.B. mixin is here: \"Mixins and Functions -> Helpers\".\n */\n.h-text-truncate {\n  display: block !important;\n  overflow: hidden !important;\n  text-overflow: ellipsis !important;\n  white-space: nowrap !important; }\n\n/**\n * Modifier: inline.\n */\n.h-text-truncate--inline {\n  display: inline-block !important; }\n\n/**\n * Forces words to wrap onto new lines when the word can't fit on a line which\n * is common when text is wrapped in a narrow width container. Hyphenation will\n * be applied to the wrapped word.\n *\n * N.B. mixin is here: \"Mixins and Functions -> Helpers\".\n */\n.h-text-wrap-word-and-hyphenate {\n  hyphens: auto !important;\n  overflow-wrap: break-word !important;\n  word-wrap: break-word !important; }\n\n/* 3. Hide\n   ========================================================================= */\n/**\n * Hide elements from both screen readers and the document flow.\n */\n.h-hide {\n  display: none !important; }\n\n/**\n * Hide elements only visually but have it available for screen readers.\n *\n * N.B. mixin is here: \"Mixins and Functions -> Helpers\".\n */\n.h-hide-visually {\n  /* stylelint-disable function-whitespace-after */\n  clip: rect(1px, 1px, 1px, 1px) !important;\n  clip-path: polygon(0 0, 0 0, 0 0, 0 0) !important;\n  /* stylelint-enable */\n  height: 1px !important;\n  overflow: hidden !important;\n  position: absolute !important;\n  white-space: nowrap !important;\n  width: 1px !important; }\n\n/**\n * Hide elements for JavaScript users and non-JavaScript users, this is\n * necessary when building accessible and progressively enhanced UI's.\n *\n * These classes are applied to the `<html>` element depending whether\n * JavaScript is on or off:\n *\n * - `no-js` = JavaScript is off\n * - `js`    = JavaScript is on\n *\n * The `no-js` class is to be hard-coded to the `<html>` element in your master\n * layout to be replaced with the `js` class using JavaScript.\n *\n * N.B. these single-line declaration Helpers would typically always be applied\n * directly in the markup of your Components and Layout Templates.\n */\n.no-js .h-hide-if-js-off {\n  display: none !important; }\n\n.js .h-hide-if-js-on {\n  display: none !important; }\n\n/**\n * Hide and show elements for print media.\n */\n.h-show-for-print,\n.h-show-for-print-inline,\n.h-show-for-print-inline-block {\n  display: none !important; }\n\n@media print {\n  .h-hide-for-print {\n    display: none !important; }\n  .h-show-for-print {\n    display: block !important; }\n  .h-show-for-print-inline {\n    display: inline !important; }\n  .h-show-for-print-inline-block {\n    display: inline-block !important; } }\n\n/* 4. Spacing\n   ========================================================================= */\n/**\n * Sometimes spacing outside of a Component is handled by one of these\n * \"Spacing\" Helpers, and ALL spacing is downward facing hence only\n * `margin-bottom` being used.\n */\n/**\n * Base.\n */\n.h-spacing {\n  margin-bottom: 1rem !important; }\n\n/**\n * Decrease from base.\n */\n.h-spacing-small {\n  margin-bottom: 0.75rem !important; }\n\n.h-spacing-x-small {\n  margin-bottom: 0.5rem !important; }\n\n.h-spacing-2x-small {\n  margin-bottom: 0.25rem !important; }\n\n/**\n * Increase from base.\n */\n.h-spacing-large {\n  margin-bottom: 1.5rem !important; }\n\n.h-spacing-x-large {\n  margin-bottom: 2rem !important; }\n\n.h-spacing-2x-large {\n  margin-bottom: 2.5rem !important; }\n\n.h-spacing-3x-large {\n  margin-bottom: 3rem !important; }\n\n.h-spacing-4x-large {\n  margin-bottom: 3.5rem !important; }\n\n.h-spacing-5x-large {\n  margin-bottom: 4.5rem !important; }\n\n.h-spacing-6x-large {\n  margin-bottom: 6rem !important; }\n\n/**\n * Remove spacing.\n */\n.h-spacing-none {\n  margin-bottom: 0 !important; }\n\n/* 5. Alignment\n   ========================================================================= */\n/**\n * Flexbox version, must go on the parent of the element that needs the\n * alignment.\n *\n * N.B. mixin is here: \"Mixins and Functions -> Helpers\".\n */\n.h-align-horizontally-and-vertically {\n  align-items: center !important;\n  display: flex !important;\n  flex-flow: column;\n  justify-content: center !important; }\n\n/**\n * Position and transform version, must go on the element that needs the\n * alignment and the elements parent must have `position: relative;`.\n *\n * N.B. mixin is here: \"Mixins and Functions -> Helpers\".\n */\n.h-align-horizontally-and-vertically-parent {\n  position: relative !important; }\n\n.h-align-horizontally-and-vertically-alt {\n  left: 50% !important;\n  position: absolute !important;\n  top: 50% !important;\n  /* stylelint-disable-next-line function-whitespace-after */\n  transform: translate(-50%, -50%) !important; }\n\n/* 6. Intrinsic ratio\n   ========================================================================= */\n/**\n * A container that retains the aspect ratio of its content when that content\n * needs to adapt to the width of varying viewports. The content would\n * typically be embedded elements, like:\n *\n * `<video>`\n * `<iframe>`\n *\n * N.B. mixin is here: \"Mixins and Functions -> Helpers\".\n *\n * @credit\n * https://github.com/suitcss/components-flex-embed/blob/master/lib/\n * flex-embed.css\n */\n/**\n * The container, the default ratio is \"16:9\".\n */\n.h-intrinsic-ratio {\n  display: block !important;\n  height: 0 !important;\n  overflow: hidden !important;\n  /* stylelint-disable-next-line function-whitespace-after, max-line-length */\n  padding-bottom: 56.25% !important;\n  position: relative !important; }\n\n/**\n * Modifiers: different ratios, we can't use the mixin for this as it'll\n * generate too much CSS as we'll be generating every property for each\n * modifier when we only need to set the `padding-bottom` property—so we just\n * override the default ratio of \"16:9\".\n */\n.h-intrinsic-ratio--3-by-1 {\n  padding-bottom: 33.33333% !important; }\n\n.h-intrinsic-ratio--2-by-1 {\n  padding-bottom: 50% !important; }\n\n.h-intrinsic-ratio--4-by-3 {\n  padding-bottom: 75% !important; }\n\n.h-intrinsic-ratio--1-by-1 {\n  padding-bottom: 100% !important; }\n\n/**\n * The content.\n */\n.h-intrinsic-ratio__content {\n  height: 100% !important;\n  left: 0 !important;\n  position: absolute !important;\n  top: 0 !important;\n  width: 100% !important; }\n\n/* 7. Non-responsive image\n   ========================================================================= */\n/**\n * Images are responsive by default, see: \"Base -> Images\". But there can be\n * scenarios when you don't need this. A common example is when using\n * third-party widgets like Google Maps, not applying a Helper like this can\n * result in images not rendering correctly.\n *\n * This selector: `.h-non-responsive-img img` is included as sometimes applying\n * the Helper directly to the image element isn't always possible, or,\n * sometimes it makes sense to target a bunch of image elements within a\n * certain element.\n */\n.h-non-responsive-img,\n.h-non-responsive-img img {\n  max-width: none !important; }\n\n.tm-button {\n  border: 1px solid #d2d0d2;\n  border-radius: 0;\n  color: #4a4a4a;\n  font-size: 0.8125rem;\n  font-weight: 300;\n  padding: 0.5rem 0.75rem; }\n  .tm-button:hover {\n    background-color: #f5f5f5; }\n  .tm-button:focus {\n    border: 1px solid #4a90e2;\n    outline: 0; }\n  .tm-button:active {\n    background-color: #eeeeee; }\n  .tm-button:disabled {\n    cursor: default;\n    pointer-events: none;\n    opacity: 0.6; }\n\n.tm-button--small {\n  background-color: #fff;\n  padding: 0.25rem; }\n\n.tm-button-icon {\n  background-color: transparent; }\n\n.tm-header {\n  border-bottom: 1px solid #d2d0d2;\n  padding: 0.5rem 1rem; }\n\n.tm-header__title {\n  color: #4a4a4a;\n  font-size: 0.75rem;\n  font-weight: 700;\n  text-transform: uppercase; }\n\n.tm-note {\n  height: 100%;\n  width: 100%; }\n\n.tm-note-form {\n  border-right: 1px solid #d2d0d2;\n  float: left;\n  height: 100%;\n  padding: 1rem;\n  width: 15.625rem; }\n\n.tm-note-content {\n  display: flex;\n  flex-wrap: wrap; }\n\n.tm-note-input {\n  border: 1px solid #d2d0d2;\n  font-weight: 300;\n  font-size: 0.8125rem;\n  padding: 0.5rem;\n  width: 100%; }\n  .tm-note-input.is-error {\n    border-color: #F44336; }\n\n.tm-note-form__btn-group {\n  float: right; }\n\n.tm-note-card {\n  box-shadow: 2px 2px 0 0 #d2d0d2;\n  background-color: #f5f5f5;\n  height: fit-content;\n  padding: 1rem;\n  margin: 1rem;\n  margin-bottom: 0;\n  margin-right: 0;\n  width: 13.75rem; }\n\n.tm-note-card__title {\n  color: #4a4a4a;\n  font-size: 0.75rem;\n  font-weight: 700;\n  text-transform: uppercase; }\n\n.tm-note-card__content {\n  color: #4a4a4a;\n  font-size: 0.75rem; }\n\n.tm-note-card__control {\n  border-top: 1px solid #d2d0d2;\n  padding-top: 0.5rem; }\n\n/* This file contains purely Dirty hacks to be cleaned up - moved to other\n * files. See: http://csswizardry.com/2013/04/shame-css/\n */\nbody,\nhtml {\n  height: 100%;\n  font-size: 16px;\n  width: 100%; }\n\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: Helvetica, sans-serif; }\n\n#root,\n.tm-app {\n  height: 100%;\n  width: 100%; }\n\n.modal-container {\n  position: relative; }\n\n.modal-container .modal, .modal-container .modal-backdrop {\n  position: absolute; }\n\n.tm-button {\n  margin-left: 0.5rem; }\n"]}